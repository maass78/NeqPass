<UserControl x:Class="NeqPass.GUI.Controls.AccountControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeqPass.GUI.Controls"
             xmlns:hint="clr-namespace:MaterialControls.Assist"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="300">

    <UserControl.Resources>
        <Style TargetType="MenuItem" x:Key="MaterialMenuItem">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border BorderThickness="0"
                                    Background="Transparent"
                                    Padding="5"
                                    CornerRadius="5"
                                    x:Name="border">

                                <ContentPresenter Margin="0 0 0 0"
                                                  ContentSource="Header"/>

                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource MouseOver}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                            
                        </ControlTemplate>
                        
                        
                        
                    </Setter.Value>
                </Setter>

            </Style.Setters>
         
        </Style>

        <Style TargetType="ContextMenu" x:Key="MaterialContextMenu">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource Primary}"/>
                <Setter Property="ContextMenuService.Placement" Value="Mouse"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">

                            <Border x:Name="Border"
                                    Background="{StaticResource Primary}"
                                    Padding="5"
                                    CornerRadius="5">

                                <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style.Setters>
        </Style>

        <ContextMenu x:Key="ActionsContextMenu" 
                     Style="{StaticResource MaterialContextMenu}">
            
            <MenuItem x:Name="buttonDelete" 
                      Style="{StaticResource MaterialMenuItem}" 
                      Header="Удалить"/>
            
            <MenuItem x:Name="buttonCopyLogPass" 
                      Style="{StaticResource MaterialMenuItem}" 
                      Header="Скопировать лог:пасс"/>
            
        </ContextMenu>

    </UserControl.Resources>
    
    <Grid>
        <Button x:Name="buttonMore"
                HorizontalAlignment="Right" 
                VerticalAlignment="Top" 
                Margin="0 5 5 0"
                Width="20"
                Height="20"
                Template="{StaticResource MaterialIconButton}">

            <Image Source="/Icons/dots.png"
                   Width="15"
                   Height="15"/>

        </Button>

        <Border Background="{StaticResource Primary}" CornerRadius="10" Margin="0 5 30 5">
            <Grid HorizontalAlignment="Stretch">

                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="10">

                    <Grid Margin="0 0 0 0" HorizontalAlignment="Stretch">
                        <TextBox Style="{StaticResource MaterialTextBox}"
                                Height="27"
                                MinWidth="50"
                                Margin="0 0 50 0"
                                HorizontalAlignment="Stretch"
                                x:Name="textBoxLogin"
                                IsReadOnly="{Binding ElementName=checkBoxEditLogin, Path=IsChecked, Mode=OneWay}"
                             hint:HintAssist.HintText="Логин"/>

                        <CheckBox x:Name="checkBoxEditLogin"
                                Style="{StaticResource EditCheckBox}"
                                HorizontalAlignment="Right"
                                Margin="0 0 20 0"
                                VerticalAlignment="Center"
                                IsChecked="True"/>

                        <Button x:Name="buttonCopyLogin"
                                Style="{StaticResource CopyButton}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"/>

                    </Grid>

                    <Grid Margin="0 5 0 0" HorizontalAlignment="Stretch">
                        <TextBox Style="{StaticResource MaterialTextBox}"
                                Height="27"
                                MinWidth="50"
                                Margin="0 0 50 0"
                                HorizontalAlignment="Stretch"
                                x:Name="textBoxPassword"
                                IsReadOnly="{Binding ElementName=checkBoxEditPassword, Path=IsChecked, Mode=OneWay}"
                                hint:HintAssist.HintText="Пароль"/>

                        <CheckBox x:Name="checkBoxEditPassword"
                               Style="{StaticResource EditCheckBox}"
                                HorizontalAlignment="Right"
                              Margin="0 0 20 0"
                                VerticalAlignment="Center"
                                IsChecked="True"/>

                        <Button x:Name="buttonCopyPassword"
                                Style="{StaticResource CopyButton}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"/>
                    </Grid>

                    <Grid Margin="0 5 0 0" HorizontalAlignment="Stretch">
                        <TextBox Style="{StaticResource MaterialTextBox}"
                             Height="Auto"
                             MinWidth="50"
                             Margin="0 0 30 0"
                             HorizontalAlignment="Stretch"
                             x:Name="textBoxComment"
                             AcceptsReturn="True"
                             AcceptsTab="True"
                             IsReadOnly="{Binding ElementName=checkBoxEditComment, Path=IsChecked, Mode=OneWay}"
                             hint:HintAssist.HintText="Комментарий (опционально)"/>

                        <CheckBox x:Name="checkBoxEditComment"
                              Style="{StaticResource EditCheckBox}"
                              HorizontalAlignment="Right"
                              Margin="0 0 0 0"
                              VerticalAlignment="Center"
                              IsChecked="True"/>
                    </Grid>



                    <!--<Button Width="230"
                        Style="{StaticResource MaterialButton}"
                        Content="Скопировать"
                        Margin="0 10 0 0"/>-->

                </StackPanel>

            </Grid>
        </Border>
    </Grid>
    
    
</UserControl>
